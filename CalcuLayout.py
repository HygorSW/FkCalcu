# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CalcuLayout.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(412, 778)
        MainWindow.setMinimumSize(QtCore.QSize(412, 777))
        MainWindow.setStyleSheet("QMainWindow{\n"
"background: #272727\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(20, 80, 371, 61))
        self.textBrowser.setStyleSheet("QTextBrowser{\n"
"background: transparent;\n"
"border: 0;\n"
"}")
        self.textBrowser.setObjectName("textBrowser")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(0, -20, 621, 761))
        self.tableWidget.setStyleSheet("QTableWidget{\n"
"background: #272727;\n"
"}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.cxNumero1 = QtWidgets.QLineEdit(self.centralwidget)
        self.cxNumero1.setGeometry(QtCore.QRect(30, 210, 341, 51))
        self.cxNumero1.setStyleSheet("QLineEdit {\n"
"    background: transparent;\n"
"    color: white;\n"
"    border: 1px solid #f2f2f2;\n"
"border-radius: 20px;\n"
"font-size: 14px;\n"
"\n"
"}\n"
"")
        self.cxNumero1.setObjectName("cxNumero1")
        self.cxNumero2 = QtWidgets.QLineEdit(self.centralwidget)
        self.cxNumero2.setGeometry(QtCore.QRect(30, 300, 341, 51))
        self.cxNumero2.setStyleSheet("QLineEdit {\n"
"    background: transparent;\n"
"    color: white;\n"
"    border: 1px solid #f2f2f2;\n"
"border-radius: 20px;\n"
"font-size: 14px;\n"
"\n"
"}\n"
"")
        self.cxNumero2.setObjectName("cxNumero2")
        self.somar = QtWidgets.QPushButton(self.centralwidget)
        self.somar.setGeometry(QtCore.QRect(30, 400, 161, 71))
        self.somar.setStyleSheet("QPushButton {\n"
"    background: #ff9500;\n"
"    border-radius: 20px;\n"
"    border: 1px solid black; /* Removido espaço entre \'1\' e \'px\' */\n"
"    transition: background 0.9s, transform 0.9s; \n"
"    font-size: 20px;\n"
"color: white;\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    transform: scale(1.1); /* Aumenta o botão ao passar o mouse */\n"
"}\n"
"")
        self.somar.setObjectName("somar")

        self.subtrair = QtWidgets.QPushButton(self.centralwidget)
        self.subtrair.setGeometry(QtCore.QRect(220, 400, 161, 71))
        self.subtrair.setStyleSheet("QPushButton {\n"
"    background: #ff9500;\n"
"    border-radius: 20px;\n"
"    border: 1px solid black; /* Removido espaço entre \'1\' e \'px\' */\n"
"    transition: background 0.9s, transform 0.9s; \n"
"    font-size: 20px;\n"
"    font-size: 20px;\n"
"color: white;\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    transform: scale(1.1); /* Aumenta o botão ao passar o mouse */\n"
"}\n"
"")
        self.subtrair.setObjectName("subtrair")
        self.multiplicar = QtWidgets.QPushButton(self.centralwidget)
        self.multiplicar.setGeometry(QtCore.QRect(30, 530, 161, 71))
        self.multiplicar.setStyleSheet("QPushButton {\n"
"    background: #ff9500;\n"
"    border-radius: 20px;\n"
"    border: 1px solid black; /* Removido espaço entre \'1\' e \'px\' */\n"
"    transition: background 0.9s, transform 0.9s; \n"
"    font-size: 20px;\n"
"color: white;\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    transform: scale(1.1); /* Aumenta o botão ao passar o mouse */\n"
"}\n"
"")
        self.multiplicar.setObjectName("multiplicar")
        self.divisao = QtWidgets.QPushButton(self.centralwidget)
        self.divisao.setGeometry(QtCore.QRect(210, 530, 161, 71))
        self.divisao.setStyleSheet("QPushButton {\n"
"    background: #ff9500;\n"
"    border-radius: 20px;\n"
"    border: 1px solid black; /* Removido espaço entre \'1\' e \'px\' */\n"
"    transition: background 0.9s, transform 0.9s; \n"
"    font-size: 20px;\n"
"color: white;\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    transform: scale(1.1); /* Aumenta o botão ao passar o mouse */\n"
"}\n"
"")
        self.divisao.setObjectName("divisao")
        self.tableWidget.raise_()
        self.textBrowser.raise_()
        self.cxNumero1.raise_()
        self.cxNumero2.raise_()
        self.somar.raise_()
        self.subtrair.raise_()
        self.multiplicar.raise_()
        self.divisao.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 412, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
                                            "<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600; font-style:italic; color:#c7bb37;\">FK</span><span style=\" font-size:26pt; font-weight:600; font-style:italic; color:#ffffff;\"> CALCULADORA</span></p></body></html>"))

        self.cxNumero1.setPlaceholderText(_translate("MainWindow", "Digite o primeiro número aqui..."))
        self.cxNumero2.setPlaceholderText(_translate("MainWindow", "Digite o segundo número aqui..."))
        self.somar.setToolTip(_translate("MainWindow",
                                         "<html><head/><body><p align=\"center\"><span style=\" font-size:20pt;\">Somar + </span></p></body></html>"))
        self.subtrair.setToolTip(_translate("MainWindow",
                                         "<html><head/><body><p align=\"center\"><span style=\" font-size:20pt;\">subtrair + </span></p></body></html>"))
        self.divisao.setToolTip(_translate("MainWindow",
                                         "<html><head/><body><p align=\"center\"><span style=\" font-size:20pt;\">dividir + </span></p></body></html>"))
        self.multiplicar.setToolTip(_translate("MainWindow",
                                         "<html><head/><body><p align=\"center\"><span style=\" font-size:20pt;\">multiplicar + </span></p></body></html>"))


        self.somar.setText(_translate("MainWindow", "Somar"))
        self.subtrair.setText(_translate("MainWindow", "subtrair"))
        self.divisao.setText(_translate("MainWindow", "dividir"))
        self.multiplicar.setText(_translate("MainWindow", "multiplicar"))

        # Conectar o botão Somar à função Calcular
        self.somar.clicked.connect(self.Soma)
        self.subtrair.clicked.connect(self.Subtrair)
        self.divisao.clicked.connect(self.Dividir)
        self.multiplicar.clicked.connect(self.Multiplicar)


    def show_custom_message_box(self, title, message):
        msg_box = QtWidgets.QMessageBox()
        msg_box.setWindowTitle(title)
        msg_box.setText(message)

        # Estilização do QMessageBox
        msg_box.setStyleSheet("""
            QMessageBox {
                background-color: #FFFFFF;
                color: black;
                      padding: 10px;
                font-size: 14px;
            }
        """)


        msg_box.addButton("OK", QtWidgets.QMessageBox.AcceptRole)  # Botão padrão
        msg_box.exec_()

    def Soma(self):
        try:
            numero1 = float(self.cxNumero1.text())
            numero2 = float(self.cxNumero2.text())
            soma = numero1 + numero2

            # Exibir resultado na QMessageBox estilizada
            self.show_custom_message_box("Cálculo dos valores", f"Soma dos números: {soma:.2f}")

            # Limpar os campos após o cálculo
            self.cxNumero1.clear()
            self.cxNumero2.clear()
        except ValueError:
            # Exibir mensagem de erro na QMessageBox estilizada
            self.show_custom_message_box("Erro", "Por favor, insira números válidos.")

    def Subtrair(self):
        try:
            numero1 = float(self.cxNumero1.text())
            numero2 = float(self.cxNumero2.text())
            subtrair = numero1 - numero2

            # Exibir resultado na QMessageBox estilizada
            self.show_custom_message_box("Cálculo dos valores", f"subtração dos números: {subtrair:.2f}")

            # Limpar os campos após o cálculo
            self.cxNumero1.clear()
            self.cxNumero2.clear()
        except ValueError:
            # Exibir mensagem de erro na QMessageBox estilizada
            self.show_custom_message_box("Erro", "Por favor, insira números válidos.")

    def Dividir(self):
        try:
            numero1 = float(self.cxNumero1.text())
            numero2 = float(self.cxNumero2.text())
            divisao = numero1 / numero2

            # Exibir resultado na QMessageBox estilizada
            self.show_custom_message_box("Cálculo dos valores", f"divisao dos números: {divisao:.2f}")

            # Limpar os campos após o cálculo
            self.cxNumero1.clear()
            self.cxNumero2.clear()
        except ValueError:
            # Exibir mensagem de erro na QMessageBox estilizada
            self.show_custom_message_box("Erro", "Por favor, insira números válidos.")

    def Multiplicar(self):
        try:
            numero1 = float(self.cxNumero1.text())
            numero2 = float(self.cxNumero2.text())
            multiplicar = numero1 * numero2

            # Exibir resultado na QMessageBox estilizada
            self.show_custom_message_box("Cálculo dos valores", f"multiplicar dos números: {multiplicar:.2f}")

            # Limpar os campos após o cálculo
            self.cxNumero1.clear()
            self.cxNumero2.clear()
        except ValueError:
            # Exibir mensagem de erro na QMessageBox estilizada
            self.show_custom_message_box("Erro", "Por favor, insira números válidos.")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
